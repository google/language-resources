# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Copyright 2016 and onwards, Google, Inc.

# Afrikaans Verbalizer for dates.

import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;
import 'cardinal.grm' as c;

months =
   ("1" : "january")
 | ("2" : "february")
 | ("3" : "march")
 | ("4" : "april")
 | ("5" : "may")
 | ("6" : "june")
 | ("7" : "july")
 | ("8" : "august")
 | ("9" : "september")
 | ("10" : "october")
 | ("11" : "november")
 | ("12" : "december")
;

weekdays =
   ("1" : "monday")
 | ("2" : "tuesday")
 | ("3" : "wednesday")
 | ("4" : "thursday")
 | ("5" : "friday")
 | ("6" : "saturday")
 | ("7" : "sunday")
;

eras =
   universal_rules.ins_space
   (
     ("vChr" : "voor christus") |
     ("vC" : "voor christus") |
     ("nChr" : "na christus") |
     ("nC" : "na christus") |
     ("AD" : "a_letter d_letter") |
     ("AH" : "a_letter h_letter")
   )
;

export YEARS =
   Optimize[(c.CARDINAL <10>) |
            c.CARDINAL_YEAR |
            c.UNFACTORIZED_TWO_DIGIT_CARDINAL];

one_or_two_digits = universal_rules.kDigit universal_rules.kDigit?;

month =
  universal_rules.date_month
    universal_rules.ins_space ((one_or_two_digits @ universal_rules.delete_initial_zero @ months)
                    | Project[months, 'output'])
;

# output "tien desember negentien sewe en_num sestig"
style1 = Optimize[
  (universal_rules.date_day
     c.UNFACTORIZED_ONE_TWO_DIGIT_CARDINAL)?
  month
  universal_rules.ins_space
  (universal_rules.date_day
     c.UNFACTORIZED_ONE_TWO_DIGIT_CARDINAL)?
  (universal_rules.date_year
    universal_rules.pass_space_star
   YEARS universal_rules.del_space_star)?
  universal_rules.style1?
];

year_only = universal_rules.date_year YEARS universal_rules.any_style?;

weekday = universal_rules.date_weekday
          (weekdays | Project[weekdays, 'output'])
          universal_rules.clear_space_star
          universal_rules.ins_space;

era = universal_rules.date_era
      eras
      universal_rules.clear_space_star;

# The original Dutch grammar was quote-free.
del_quote = CDRewrite["\"" : "", "", "", universal_rules.sigma_star];

export DATE_INV = Optimize[Invert[months c.UNFACTORIZED_TWO_DIGIT_CARDINAL? YEARS]];
export DATE = Optimize[weekday? (style1 | year_only) era?];

export DATE_MARKUP = Optimize[
  del_quote @ (
   universal_rules.date
   universal_rules.opening_brace
   weekday?
   (style1 | year_only)
   era?
   universal_rules.closing_brace) @ universal_rules.CLEAN_SPACES
];
