# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Copyright 2016 and onwards, Google, Inc.

# Parser for ordinals.

import 'universal_rules.grm' as universal_rules;
import 'universal_func.grm' as universal_func;

# Format for ordinals is <digit> + "e", e.g. 1e, 2e, 3e
# or <digit> + "de", e.g. 2de, 3de. In this last case "ste" is used for 1: 1ste.
# Suffixes must be attached immediately to the word in order to ensure
# things like "Hij won in 2012 de prijs" do not get classified as ordinals.
last_digit = (
              (("0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" |
                "11" | "12" | "13")
               (((universal_rules.lower_case @ "nd" | "rd" | "th" | "st")))
              ));

separator = universal_rules.clear_space_star ("." : ".")? universal_rules.clear_space_star;
no_separators = last_digit | (universal_rules.d1to9 universal_rules.kDigit* last_digit);
with_separators = universal_rules.d1to9 universal_rules.kDigit{0,2} (separator universal_rules.kDigit{3})*
                  ((separator universal_rules.kDigit{1,2} last_digit) @
                   (universal_rules.kDigit{3}));

export ORDINAL = Optimize[no_separators | with_separators];

# public export
export ORDINAL_MARKUP = Optimize[
       Invert[universal_rules.ordinal]
       Invert[universal_rules.opening_brace]
       Invert[universal_rules.ordinal_integer]
       universal_rules.ins_quote
       ORDINAL
       universal_rules.ins_quote
       universal_rules.ins_space
       Invert[universal_rules.closing_brace]];
